memberSearchIndex = [{"p":"compiler.lexer","c":"RegularExpression","l":"alternate(RegularExpression)","u":"alternate(compiler.lexer.RegularExpression)"},{"p":"compiler.lexer","c":"RegularExpression","l":"alternate(RegularExpression...)","u":"alternate(compiler.lexer.RegularExpression...)"},{"p":"compiler.lexer","c":"RegularExpression.Alternation","l":"Alternation(RegularExpression...)","u":"%3Cinit%3E(compiler.lexer.RegularExpression...)"},{"p":"compiler.semantic","c":"Analyzer","l":"analyze(Collection<T>, E)","u":"analyze(java.util.Collection,E)"},{"p":"compiler.semantic","c":"BasicAnalyzer","l":"analyze(Collection<T>, E)","u":"analyze(java.util.Collection,E)"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"AND"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"AND"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"andExpression(Expression, Expression)","u":"andExpression(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"compiler.lexer","c":"RegularExpression","l":"any()"},{"p":"compiler.lexer","c":"RegularExpression.Any","l":"Any()","u":"%3Cinit%3E()"},{"p":"lucis.compiler.syntax","c":"IndexExpression","l":"array"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"AS"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"ASSERT"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"ASSIGN"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"assignStatement(Expression, Expression)","u":"assignStatement(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.syntax","c":"AssignStatement","l":"AssignStatement(Expression, Expression)","u":"%3Cinit%3E(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"AT"},{"p":"compiler.io","c":"Reader","l":"available()"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"BACK_QUOTE"},{"p":"lucis.compiler.syntax","c":"TraitStatement","l":"bases"},{"p":"compiler.semantic","c":"DefinePass.Type","l":"BFS"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"BLANK"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"BLOCK_COMMENT"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"blockStatement(List<Statement>)","u":"blockStatement(java.util.List)"},{"p":"lucis.compiler.syntax","c":"BlockStatement","l":"BlockStatement(List<Statement>)","u":"%3Cinit%3E(java.util.List)"},{"p":"lucis.compiler.syntax","c":"FunctionStatement","l":"body"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"bracketExpression(Expression)","u":"bracketExpression(lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"branchStatement(Expression, Statement)","u":"branchStatement(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Statement)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"branchStatement(Expression, Statement, Statement)","u":"branchStatement(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Statement,lucis.compiler.syntax.Statement)"},{"p":"lucis.compiler.syntax","c":"BranchStatement","l":"BranchStatement(Expression, Statement, Statement)","u":"%3Cinit%3E(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Statement,lucis.compiler.syntax.Statement)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"BREAK"},{"p":"compiler.lexer","c":"DFALexer.Builder","l":"build()"},{"p":"compiler.lexer","c":"Lexer.Builder","l":"build()"},{"p":"compiler.parser","c":"Parser.Builder","l":"build()"},{"p":"compiler.semantic","c":"Analyzer.Builder","l":"build()"},{"p":"compiler.semantic","c":"BasicAnalyzer.Builder","l":"build()"},{"p":"compiler.semantic","c":"BFSPass.Builder","l":"build()"},{"p":"compiler.semantic","c":"DFSPass.Builder","l":"build()"},{"p":"compiler.semantic","c":"Pass.Builder","l":"build()"},{"p":"compiler.parser","c":"LRParser.Builder","l":"build(Parser.Hook<?>)","u":"build(compiler.parser.Parser.Hook)"},{"p":"compiler.parser","c":"Parser.Builder","l":"build(Parser.Hook<?>)","u":"build(compiler.parser.Parser.Hook)"},{"p":"compiler.lexer","c":"DFALexer.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"compiler.semantic","c":"BasicAnalyzer.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"compiler.semantic","c":"BFSPass.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"compiler.semantic","c":"DFSPass.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"compiler.parser","c":"LRParser.Builder","l":"Builder(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"lucis.compiler.semantic","c":"LucisString","l":"bytes"},{"p":"lucis.compiler.semantic","c":"Utility","l":"calculateSignature(LucisType, LucisType...)","u":"calculateSignature(lucis.compiler.semantic.LucisType,lucis.compiler.semantic.LucisType...)"},{"p":"compiler.parser","c":"Grammar.Part","l":"capture"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"CARRIAGE_RETURN"},{"p":"compiler.io","c":"ChannelReader","l":"ChannelReader(ReadableByteChannel)","u":"%3Cinit%3E(java.nio.channels.ReadableByteChannel)"},{"p":"compiler.io","c":"ChannelReader","l":"ChannelReader(ReadableByteChannel, int)","u":"%3Cinit%3E(java.nio.channels.ReadableByteChannel,int)"},{"p":"compiler.io","c":"ChannelReader","l":"ChannelReader(ReadableByteChannel, int, Charset)","u":"%3Cinit%3E(java.nio.channels.ReadableByteChannel,int,java.nio.charset.Charset)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree","l":"children"},{"p":"compiler.entity","c":"SyntaxTree","l":"children()"},{"p":"lucis.compiler.syntax","c":"SyntaxTree","l":"children()"},{"p":"lucis.compiler.semantic","c":"LucisType.Kind","l":"CLASS"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"CLASS"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"classStatement(String, List<ClassStatement.Field>)","u":"classStatement(java.lang.String,java.util.List)"},{"p":"lucis.compiler.syntax","c":"ClassStatement","l":"ClassStatement(String, List<ClassStatement.Field>)","u":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"compiler.semantic","c":"Pass","l":"clear()"},{"p":"compiler.lexer","c":"RegularExpression","l":"closure()"},{"p":"compiler.lexer","c":"RegularExpression","l":"closure(RegularExpression)","u":"closure(compiler.lexer.RegularExpression)"},{"p":"compiler.lexer","c":"RegularExpression.Closure","l":"Closure(RegularExpression)","u":"%3Cinit%3E(compiler.lexer.RegularExpression)"},{"p":"lucis.compiler.semantic.steps","c":"CollectModuleStep","l":"CollectModuleStep()","u":"%3Cinit%3E()"},{"p":"lucis.compiler.utility","c":"AnalyzePasses","l":"CollectPass"},{"p":"lucis.compiler.semantic.steps","c":"CollectTypeStep","l":"CollectTypeStep()","u":"%3Cinit%3E()"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"COLON"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"COMMA"},{"p":"lucis.compiler","c":"Compiler","l":"compile(File...)","u":"compile(java.io.File...)"},{"p":"lucis.compiler","c":"Compiler","l":"Compiler()","u":"%3Cinit%3E()"},{"p":"lucis.compiler","c":"Compiler","l":"Compiler(Lexer, Parser, Analyzer<SyntaxTree, Environment>)","u":"%3Cinit%3E(compiler.lexer.Lexer,compiler.parser.Parser,compiler.semantic.Analyzer)"},{"p":"compiler.lexer","c":"RegularExpression","l":"concatenate(RegularExpression)","u":"concatenate(compiler.lexer.RegularExpression)"},{"p":"compiler.lexer","c":"RegularExpression","l":"concatenate(RegularExpression...)","u":"concatenate(compiler.lexer.RegularExpression...)"},{"p":"compiler.lexer","c":"RegularExpression.Concatenation","l":"Concatenation(RegularExpression...)","u":"%3Cinit%3E(compiler.lexer.RegularExpression...)"},{"p":"lucis.compiler.syntax","c":"BranchStatement","l":"condition"},{"p":"compiler.lexer","c":"RegularExpression.Pure","l":"content()"},{"p":"lucis.compiler.syntax","c":"SyntaxTree","l":"context()"},{"p":"lucis.compiler.syntax","c":"SyntaxTree","l":"context(Context)","u":"context(lucis.compiler.semantic.Context)"},{"p":"lucis.compiler.semantic","c":"Context","l":"Context(Context)","u":"%3Cinit%3E(lucis.compiler.semantic.Context)"},{"p":"lucis.compiler.syntax","c":"LiteralExpression.Type","l":"DECIMAL"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"DECIMAL_LITERAL"},{"p":"lucis.compiler.utility","c":"Constants","l":"DECIMAL_TYPE"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"decimalExpression(String)","u":"decimalExpression(java.lang.String)"},{"p":"compiler.parser","c":"Grammar.Capture","l":"DEFAULT"},{"p":"lucis.compiler","c":"Compiler","l":"defaultAnalyzer()"},{"p":"lucis.compiler","c":"Compiler","l":"defaultLexer()"},{"p":"lucis.compiler","c":"Compiler","l":"defaultParser()"},{"p":"compiler.lexer","c":"Lexer.Builder","l":"define(Class<?>)","u":"define(java.lang.Class)"},{"p":"compiler.parser","c":"Parser.Builder","l":"define(Class<?>)","u":"define(java.lang.Class)"},{"p":"compiler.parser","c":"LRParser.Builder","l":"define(Grammar)","u":"define(compiler.parser.Grammar)"},{"p":"compiler.parser","c":"Parser.Builder","l":"define(Grammar)","u":"define(compiler.parser.Grammar)"},{"p":"compiler.parser","c":"Parser.Builder","l":"define(List<Grammar>)","u":"define(java.util.List)"},{"p":"compiler.lexer","c":"Lexer.Builder","l":"define(RegularExpression, String)","u":"define(compiler.lexer.RegularExpression,java.lang.String)"},{"p":"compiler.lexer","c":"DFALexer.Builder","l":"define(RegularExpression, String, int)","u":"define(compiler.lexer.RegularExpression,java.lang.String,int)"},{"p":"compiler.lexer","c":"Lexer.Builder","l":"define(RegularExpression, String, int)","u":"define(compiler.lexer.RegularExpression,java.lang.String,int)"},{"p":"compiler.semantic","c":"Analyzer.Builder","l":"definePass(Pass<T, E>)","u":"definePass(compiler.semantic.Pass)"},{"p":"compiler.semantic","c":"BasicAnalyzer.Builder","l":"definePass(Pass<T, E>)","u":"definePass(compiler.semantic.Pass)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"defineStatement(String, Expression)","u":"defineStatement(java.lang.String,lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"defineStatement(UniqueIdentifier, String, Expression)","u":"defineStatement(lucis.compiler.syntax.UniqueIdentifier,java.lang.String,lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.syntax","c":"DefineStatement","l":"DefineStatement(UniqueIdentifier, String, Expression)","u":"%3Cinit%3E(lucis.compiler.syntax.UniqueIdentifier,java.lang.String,lucis.compiler.syntax.Expression)"},{"p":"compiler.semantic","c":"DefinePass.Type","l":"DFS"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"DIGITS"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"DISCARD"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"discardStatement(Expression)","u":"discardStatement(lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.syntax","c":"DiscardStatement","l":"DiscardStatement(Expression)","u":"%3Cinit%3E(lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"DIVISION"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"DIVISION"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"divisionExpression(Expression, Expression)","u":"divisionExpression(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"DOT"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"DOUBLE_QUOTE"},{"p":"lucis.compiler.syntax","c":"DoubleOperatorExpression","l":"DoubleOperatorExpression(OperatorExpression.Operator, Expression, Expression)","u":"%3Cinit%3E(lucis.compiler.syntax.OperatorExpression.Operator,lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"elementExpression(Expression, String)","u":"elementExpression(lucis.compiler.syntax.Expression,java.lang.String)"},{"p":"lucis.compiler.syntax","c":"ElementExpression","l":"ElementExpression(Expression, String)","u":"%3Cinit%3E(lucis.compiler.syntax.Expression,java.lang.String)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"elementExpression(String)","u":"elementExpression(java.lang.String)"},{"p":"lucis.compiler.syntax","c":"ElementExpression","l":"ElementExpression(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"ELLIPSIS"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"ELSE"},{"p":"compiler.lexer","c":"RegularExpression","l":"empty()"},{"p":"compiler.lexer","c":"RegularExpression.Empty","l":"Empty()","u":"%3Cinit%3E()"},{"p":"compiler.lexer","c":"RegularExpression.Range","l":"end()"},{"p":"lucis.compiler.semantic","c":"Environment","l":"Environment()","u":"%3Cinit%3E()"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"EQUAL"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"equalExpression(Expression, Expression)","u":"equalExpression(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"compiler.entity","c":"Position","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"compiler.entity","c":"Unit","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"compiler.lexer","c":"RegularExpression.Alternation","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"compiler.lexer","c":"RegularExpression.Any","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"compiler.lexer","c":"RegularExpression.Closure","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"compiler.lexer","c":"RegularExpression.Concatenation","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"compiler.lexer","c":"RegularExpression.Empty","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"compiler.lexer","c":"RegularExpression.Pure","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"compiler.lexer","c":"RegularExpression.Range","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"compiler.parser","c":"Grammar","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"compiler.parser","c":"Grammar.Part","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"lucis.compiler.semantic","c":"LucisString","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"lucis.compiler.semantic","c":"LucisSymbol","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"lucis.compiler.semantic","c":"LucisType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"lucis.compiler.semantic","c":"LucisType.Field","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"lucis.compiler.syntax","c":"FunctionStatement.Parameter","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"lucis.compiler.syntax","c":"UniqueIdentifier","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"lucis.compiler.utility","c":"Utility","l":"escape(String)","u":"escape(java.lang.String)"},{"p":"compiler.parser","c":"Grammar.Capture","l":"EXCLUDE"},{"p":"compiler.parser","c":"GrammarRule","l":"excludeIndexes()"},{"p":"compiler.parser","c":"GrammarRule","l":"excludeNames()"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"EXPORT"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"exportModule(ModuleHeader, UniqueIdentifier)","u":"exportModule(lucis.compiler.syntax.ModuleHeader,lucis.compiler.syntax.UniqueIdentifier)"},{"p":"lucis.compiler.syntax","c":"ModuleHeader","l":"exports"},{"p":"lucis.compiler.syntax","c":"DiscardStatement","l":"expression"},{"p":"lucis.compiler.syntax","c":"SingleOperatorExpression","l":"expression"},{"p":"compiler.lexer","c":"RegularExpression.Closure","l":"expression()"},{"p":"lucis.compiler.syntax","c":"Expression","l":"Expression(List<SyntaxTree>)","u":"%3Cinit%3E(java.util.List)"},{"p":"lucis.compiler.syntax","c":"Expression","l":"Expression(SyntaxTree...)","u":"%3Cinit%3E(lucis.compiler.syntax.SyntaxTree...)"},{"p":"lucis.compiler.syntax","c":"DoubleOperatorExpression","l":"expression1"},{"p":"lucis.compiler.syntax","c":"DoubleOperatorExpression","l":"expression2"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"expressionList()"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"expressionList(Expression)","u":"expressionList(lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"expressionList(List<Expression>, Expression)","u":"expressionList(java.util.List,lucis.compiler.syntax.Expression)"},{"p":"compiler.lexer","c":"RegularExpression.Alternation","l":"expressions()"},{"p":"compiler.lexer","c":"RegularExpression.Concatenation","l":"expressions()"},{"p":"lucis.compiler.semantic","c":"LucisType.Field","l":"Field()","u":"%3Cinit%3E()"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"field(UniqueIdentifier, String)","u":"field(lucis.compiler.syntax.UniqueIdentifier,java.lang.String)"},{"p":"lucis.compiler.syntax","c":"ClassStatement.Field","l":"Field(UniqueIdentifier, String)","u":"%3Cinit%3E(lucis.compiler.syntax.UniqueIdentifier,java.lang.String)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"fieldList()"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"fieldList(List<ClassStatement.Field>, ClassStatement.Field)","u":"fieldList(java.util.List,lucis.compiler.syntax.ClassStatement.Field)"},{"p":"lucis.compiler.syntax","c":"ClassStatement","l":"fields"},{"p":"lucis.compiler.semantic","c":"LucisType","l":"fields()"},{"p":"lucis.compiler.semantic","c":"LucisModule","l":"findFunction(LucisSymbol)","u":"findFunction(lucis.compiler.semantic.LucisSymbol)"},{"p":"lucis.compiler.semantic","c":"Environment","l":"findModule(String)","u":"findModule(java.lang.String)"},{"p":"lucis.compiler.semantic","c":"Context","l":"findSymbol(String)","u":"findSymbol(java.lang.String)"},{"p":"lucis.compiler.semantic","c":"LucisModule","l":"findSymbol(String)","u":"findSymbol(java.lang.String)"},{"p":"lucis.compiler.semantic","c":"LucisModule","l":"findType(LucisSymbol)","u":"findType(lucis.compiler.semantic.LucisSymbol)"},{"p":"lucis.compiler.semantic","c":"Context","l":"findType(String)","u":"findType(java.lang.String)"},{"p":"lucis.compiler.semantic","c":"Context","l":"findVariable(String)","u":"findVariable(java.lang.String)"},{"p":"lucis.compiler.semantic","c":"LucisModule","l":"foundFunction(LucisFunction)","u":"foundFunction(lucis.compiler.semantic.LucisFunction)"},{"p":"lucis.compiler.semantic","c":"LucisModule","l":"foundFunction(LucisSymbol, LucisFunction)","u":"foundFunction(lucis.compiler.semantic.LucisSymbol,lucis.compiler.semantic.LucisFunction)"},{"p":"lucis.compiler.semantic","c":"Environment","l":"foundModule(String)","u":"foundModule(java.lang.String)"},{"p":"lucis.compiler.semantic","c":"Context","l":"foundSymbol(LucisSymbol)","u":"foundSymbol(lucis.compiler.semantic.LucisSymbol)"},{"p":"lucis.compiler.semantic","c":"LucisModule","l":"foundSymbol(LucisSymbol)","u":"foundSymbol(lucis.compiler.semantic.LucisSymbol)"},{"p":"lucis.compiler.semantic","c":"Context","l":"foundSymbol(String, LucisSymbol)","u":"foundSymbol(java.lang.String,lucis.compiler.semantic.LucisSymbol)"},{"p":"lucis.compiler.semantic","c":"LucisModule","l":"foundSymbol(String, LucisSymbol)","u":"foundSymbol(java.lang.String,lucis.compiler.semantic.LucisSymbol)"},{"p":"lucis.compiler.semantic","c":"LucisModule","l":"foundType(LucisSymbol, LucisType)","u":"foundType(lucis.compiler.semantic.LucisSymbol,lucis.compiler.semantic.LucisType)"},{"p":"lucis.compiler.semantic","c":"LucisModule","l":"foundType(LucisType)","u":"foundType(lucis.compiler.semantic.LucisType)"},{"p":"lucis.compiler.semantic","c":"Context","l":"foundType(String, LucisType)","u":"foundType(java.lang.String,lucis.compiler.semantic.LucisType)"},{"p":"lucis.compiler.semantic","c":"Context","l":"foundVariable(String, LucisVariable)","u":"foundVariable(java.lang.String,lucis.compiler.semantic.LucisVariable)"},{"p":"lucis.compiler.semantic","c":"LucisType","l":"fullName()"},{"p":"lucis.compiler.syntax","c":"FunctionExpression","l":"function"},{"p":"lucis.compiler.semantic","c":"LucisSymbol.Kind","l":"FUNCTION"},{"p":"lucis.compiler.utility","c":"Constants","l":"FUNCTION_TYPE"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"functionExpression(Expression, List<Expression>)","u":"functionExpression(lucis.compiler.syntax.Expression,java.util.List)"},{"p":"lucis.compiler.syntax","c":"FunctionExpression","l":"FunctionExpression(Expression, List<Expression>)","u":"%3Cinit%3E(lucis.compiler.syntax.Expression,java.util.List)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"functionStatement(UniqueIdentifier, String, List<FunctionStatement.Parameter>, Expression)","u":"functionStatement(lucis.compiler.syntax.UniqueIdentifier,java.lang.String,java.util.List,lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"functionStatement(UniqueIdentifier, String, List<FunctionStatement.Parameter>, Statement)","u":"functionStatement(lucis.compiler.syntax.UniqueIdentifier,java.lang.String,java.util.List,lucis.compiler.syntax.Statement)"},{"p":"lucis.compiler.syntax","c":"FunctionStatement","l":"FunctionStatement(UniqueIdentifier, String, List<FunctionStatement.Parameter>, Statement)","u":"%3Cinit%3E(lucis.compiler.syntax.UniqueIdentifier,java.lang.String,java.util.List,lucis.compiler.syntax.Statement)"},{"p":"lucis.compiler.semantic","c":"Context","l":"getCurrentModule()"},{"p":"compiler.parser","c":"Grammar","l":"Grammar(String, Grammar.Part[], Function<Object[], ?>)","u":"%3Cinit%3E(java.lang.String,compiler.parser.Grammar.Part[],java.util.function.Function)"},{"p":"compiler.parser","c":"Grammar","l":"Grammar(String, String[], Function<Object[], ?>)","u":"%3Cinit%3E(java.lang.String,java.lang.String[],java.util.function.Function)"},{"p":"compiler.parser","c":"GrammaticalException","l":"GrammaticalException()","u":"%3Cinit%3E()"},{"p":"compiler.parser","c":"GrammaticalException","l":"GrammaticalException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"compiler.parser","c":"GrammaticalException","l":"GrammaticalException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"compiler.parser","c":"GrammaticalException","l":"GrammaticalException(String, Throwable, boolean, boolean)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)"},{"p":"compiler.parser","c":"GrammaticalException","l":"GrammaticalException(Throwable)","u":"%3Cinit%3E(java.lang.Throwable)"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"GREATER"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"GREATER_EQUAL"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"greaterEqualExpression(Expression, Expression)","u":"greaterEqualExpression(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"greaterExpression(Expression, Expression)","u":"greaterExpression(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"compiler.parser","c":"GrammarPriority","l":"group()"},{"p":"compiler.entity","c":"Position","l":"hashCode()"},{"p":"compiler.entity","c":"Unit","l":"hashCode()"},{"p":"compiler.lexer","c":"RegularExpression.Alternation","l":"hashCode()"},{"p":"compiler.lexer","c":"RegularExpression.Any","l":"hashCode()"},{"p":"compiler.lexer","c":"RegularExpression.Closure","l":"hashCode()"},{"p":"compiler.lexer","c":"RegularExpression.Concatenation","l":"hashCode()"},{"p":"compiler.lexer","c":"RegularExpression.Empty","l":"hashCode()"},{"p":"compiler.lexer","c":"RegularExpression.Pure","l":"hashCode()"},{"p":"compiler.lexer","c":"RegularExpression.Range","l":"hashCode()"},{"p":"compiler.parser","c":"Grammar","l":"hashCode()"},{"p":"compiler.parser","c":"Grammar.Part","l":"hashCode()"},{"p":"lucis.compiler.semantic","c":"LucisString","l":"hashCode()"},{"p":"lucis.compiler.semantic","c":"LucisSymbol","l":"hashCode()"},{"p":"lucis.compiler.semantic","c":"LucisType.Field","l":"hashCode()"},{"p":"lucis.compiler.semantic","c":"LucisType","l":"hashCode()"},{"p":"lucis.compiler.syntax","c":"FunctionStatement.Parameter","l":"hashCode()"},{"p":"lucis.compiler.syntax","c":"UniqueIdentifier","l":"hashCode()"},{"p":"lucis.compiler.syntax","c":"Source","l":"header"},{"p":"compiler.parser","c":"Parser.Hook","l":"hook(Object, Position)","u":"hook(java.lang.Object,compiler.entity.Position)"},{"p":"lucis.compiler.syntax","c":"DefineStatement","l":"identifier"},{"p":"lucis.compiler.syntax","c":"ElementExpression","l":"identifier"},{"p":"lucis.compiler.syntax","c":"FunctionStatement","l":"identifier"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"IDENTIFIER"},{"p":"lucis.compiler.syntax","c":"FunctionStatement.Parameter","l":"identifier()"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"IF"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"IMPORT"},{"p":"lucis.compiler.semantic","c":"Context","l":"importCurrentModule()"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"importModule(ModuleHeader, UniqueIdentifier)","u":"importModule(lucis.compiler.syntax.ModuleHeader,lucis.compiler.syntax.UniqueIdentifier)"},{"p":"lucis.compiler.syntax","c":"ModuleHeader","l":"imports"},{"p":"lucis.compiler.semantic","c":"Context","l":"importSymbols(String, Set<LucisSymbol>)","u":"importSymbols(java.lang.String,java.util.Set)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"IN"},{"p":"compiler.parser","c":"Grammar.Capture","l":"INCLUDE"},{"p":"compiler.parser","c":"GrammarRule","l":"includeIndexes()"},{"p":"compiler.parser","c":"GrammarRule","l":"includeNames()"},{"p":"lucis.compiler.syntax","c":"IndexExpression","l":"index"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"indexExpression(Expression, Expression)","u":"indexExpression(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.syntax","c":"IndexExpression","l":"IndexExpression(Expression, Expression)","u":"%3Cinit%3E(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"InitializeContextStep()","u":"%3Cinit%3E()"},{"p":"lucis.compiler.syntax","c":"LiteralExpression.Type","l":"INTEGER"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"INTEGER_LITERAL"},{"p":"lucis.compiler.utility","c":"Constants","l":"INTEGER_TYPE"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"integerExpression(String)","u":"integerExpression(java.lang.String)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"IS"},{"p":"lucis.compiler.semantic","c":"LucisSymbol","l":"kind()"},{"p":"lucis.compiler.semantic","c":"LucisType","l":"kind()"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"L_ANGLE_BRACKET"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"L_CURLY_BRACKET"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"L_ROUND_BRACKET"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"L_SQUARE_BRACKET"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"LAMBDA"},{"p":"lucis.compiler.syntax","c":"AssignStatement","l":"left"},{"p":"compiler.parser","c":"Grammar","l":"left()"},{"p":"compiler.parser","c":"Grammar","l":"length()"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"LESS"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"LESS_EQUAL"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"lessEqualExpression(Expression, Expression)","u":"lessEqualExpression(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"lessExpression(Expression, Expression)","u":"lessExpression(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"LETTERS"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"LINE_COMMENT"},{"p":"compiler.entity","c":"Position","l":"line()"},{"p":"lucis.compiler.syntax","c":"LiteralExpression","l":"LiteralExpression(LiteralExpression.Type, String)","u":"%3Cinit%3E(lucis.compiler.syntax.LiteralExpression.Type,java.lang.String)"},{"p":"lucis.compiler.semantic","c":"Environment","l":"loadModule(String)","u":"loadModule(java.lang.String)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"LOWER_LETTERS"},{"p":"lucis.compiler.semantic","c":"LucisDecimal","l":"LucisDecimal()","u":"%3Cinit%3E()"},{"p":"lucis.compiler.semantic","c":"LucisFunction","l":"LucisFunction(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"lucis.compiler.semantic","c":"LucisInteger","l":"LucisInteger()","u":"%3Cinit%3E()"},{"p":"lucis.compiler.semantic","c":"LucisModule","l":"LucisModule(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"lucis.compiler.semantic","c":"LucisObject","l":"LucisObject()","u":"%3Cinit%3E()"},{"p":"lucis.compiler.semantic","c":"LucisObject","l":"LucisObject(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"lucis.compiler.semantic","c":"LucisString","l":"LucisString(byte[])","u":"%3Cinit%3E(byte[])"},{"p":"lucis.compiler.semantic","c":"LucisSymbol","l":"LucisSymbol(String, String, LucisSymbol.Kind)","u":"%3Cinit%3E(java.lang.String,java.lang.String,lucis.compiler.semantic.LucisSymbol.Kind)"},{"p":"lucis.compiler.semantic","c":"LucisSymbol","l":"LucisSymbol(String, String, String, LucisSymbol.Kind)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,lucis.compiler.semantic.LucisSymbol.Kind)"},{"p":"lucis.compiler.semantic","c":"LucisType","l":"LucisType(String, LucisType.Kind, LucisModule)","u":"%3Cinit%3E(java.lang.String,lucis.compiler.semantic.LucisType.Kind,lucis.compiler.semantic.LucisModule)"},{"p":"lucis.compiler.semantic","c":"LucisType","l":"LucisType(String, LucisType.Kind, LucisModule, Map<String, LucisType.Field>)","u":"%3Cinit%3E(java.lang.String,lucis.compiler.semantic.LucisType.Kind,lucis.compiler.semantic.LucisModule,java.util.Map)"},{"p":"lucis.compiler.semantic","c":"LucisVariable","l":"LucisVariable(LucisType, String)","u":"%3Cinit%3E(lucis.compiler.semantic.LucisType,java.lang.String)"},{"p":"lucis.compiler.semantic","c":"LucisVariable","l":"LucisVariable(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"com.lucis.compiler","c":"Test","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"compiler.io","c":"ChannelReader","l":"mark()"},{"p":"compiler.io","c":"Reader","l":"mark()"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"MINUS"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"minusExpression(Expression, Expression)","u":"minusExpression(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"MODULE"},{"p":"lucis.compiler.utility","c":"Constants","l":"MODULE_TYPE"},{"p":"lucis.compiler.semantic","c":"LucisSymbol","l":"module()"},{"p":"lucis.compiler.semantic","c":"LucisType","l":"module()"},{"p":"lucis.compiler.syntax","c":"UniqueIdentifier","l":"module()"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"moduleHeader(String)","u":"moduleHeader(java.lang.String)"},{"p":"lucis.compiler.syntax","c":"ModuleHeader","l":"ModuleHeader(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"moduleName(String)","u":"moduleName(java.lang.String)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"moduleName(String, String)","u":"moduleName(java.lang.String,java.lang.String)"},{"p":"compiler.lexer","c":"RegularExpression","l":"multiple()"},{"p":"compiler.lexer","c":"RegularExpression","l":"multiple(RegularExpression)","u":"multiple(compiler.lexer.RegularExpression)"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"MULTIPLY"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"MULTIPLY"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"multiplyExpression(Expression, Expression)","u":"multiplyExpression(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"compiler.parser","c":"Grammar.Part","l":"name"},{"p":"lucis.compiler.semantic","c":"LucisFunction","l":"name"},{"p":"lucis.compiler.semantic","c":"LucisModule","l":"name"},{"p":"lucis.compiler.semantic","c":"LucisVariable","l":"name"},{"p":"lucis.compiler.syntax","c":"ClassStatement.Field","l":"name"},{"p":"lucis.compiler.syntax","c":"ClassStatement","l":"name"},{"p":"lucis.compiler.syntax","c":"ModuleHeader","l":"name"},{"p":"lucis.compiler.syntax","c":"TraitStatement","l":"name"},{"p":"compiler.entity","c":"Unit","l":"name()"},{"p":"compiler.parser","c":"GrammarPriority","l":"name()"},{"p":"lucis.compiler.semantic","c":"LucisSymbol","l":"name()"},{"p":"lucis.compiler.semantic","c":"LucisType","l":"name()"},{"p":"lucis.compiler.syntax","c":"UniqueIdentifier","l":"name()"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"NATIVE"},{"p":"compiler.lexer","c":"RegularExpression","l":"negate(int...)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"negationExpression(Expression)","u":"negationExpression(lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.syntax","c":"BranchStatement","l":"negative"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"NEGATIVE"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"NEGATIVE"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"negativeExpression(Expression)","u":"negativeExpression(lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"NEW_LINE"},{"p":"compiler.io","c":"ChannelReader","l":"next()"},{"p":"compiler.io","c":"Reader","l":"next()"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"NONZERO"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"NORMAL_STRING_LITERAL"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"normalStringExpression(String)","u":"normalStringExpression(java.lang.String)"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"NOT"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"NOT"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"NOT_EQUAL"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"notEqualExpression(Expression, Expression)","u":"notEqualExpression(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.utility","c":"Constants","l":"OBJECT_TYPE"},{"p":"compiler.entity","c":"Position","l":"offset()"},{"p":"lucis.compiler.syntax","c":"OperatorExpression","l":"operator"},{"p":"lucis.compiler.syntax","c":"OperatorExpression","l":"OperatorExpression(OperatorExpression.Operator, List<SyntaxTree>)","u":"%3Cinit%3E(lucis.compiler.syntax.OperatorExpression.Operator,java.util.List)"},{"p":"lucis.compiler.syntax","c":"OperatorExpression","l":"OperatorExpression(OperatorExpression.Operator, SyntaxTree...)","u":"%3Cinit%3E(lucis.compiler.syntax.OperatorExpression.Operator,lucis.compiler.syntax.SyntaxTree...)"},{"p":"compiler.lexer","c":"RegularExpression","l":"optional()"},{"p":"compiler.lexer","c":"RegularExpression","l":"optional(RegularExpression)","u":"optional(compiler.lexer.RegularExpression)"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"OR"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"OR"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"orExpression(Expression, Expression)","u":"orExpression(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"compiler.semantic","c":"DefinePass","l":"parallel()"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"parameter(UniqueIdentifier, String)","u":"parameter(lucis.compiler.syntax.UniqueIdentifier,java.lang.String)"},{"p":"lucis.compiler.syntax","c":"FunctionStatement.Parameter","l":"Parameter(UniqueIdentifier, String)","u":"%3Cinit%3E(lucis.compiler.syntax.UniqueIdentifier,java.lang.String)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"parameterList()"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"parameterList(FunctionStatement.Parameter)","u":"parameterList(lucis.compiler.syntax.FunctionStatement.Parameter)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"parameterList(List<FunctionStatement.Parameter>, FunctionStatement.Parameter)","u":"parameterList(java.util.List,lucis.compiler.syntax.FunctionStatement.Parameter)"},{"p":"lucis.compiler.syntax","c":"FunctionExpression","l":"parameters"},{"p":"lucis.compiler.syntax","c":"FunctionStatement","l":"parameters"},{"p":"lucis.compiler.syntax","c":"ElementExpression","l":"parent"},{"p":"lucis.compiler.semantic","c":"Context","l":"parent()"},{"p":"lucis.compiler.semantic","c":"Context","l":"parent(Context)","u":"parent(lucis.compiler.semantic.Context)"},{"p":"compiler.parser","c":"LRParser","l":"parse(Stream<? extends Unit>)","u":"parse(java.util.stream.Stream)"},{"p":"compiler.parser","c":"Parser","l":"parse(Stream<? extends Unit>)","u":"parse(java.util.stream.Stream)"},{"p":"compiler.parser","c":"Grammar.Part","l":"Part(String, Grammar.Capture)","u":"%3Cinit%3E(java.lang.String,compiler.parser.Grammar.Capture)"},{"p":"compiler.io","c":"ChannelReader","l":"peek()"},{"p":"compiler.io","c":"Reader","l":"peek()"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"PLUS"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"plusExpression(Expression, Expression)","u":"plusExpression(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"compiler.entity","c":"SyntaxTree","l":"position()"},{"p":"compiler.entity","c":"Unit","l":"position()"},{"p":"compiler.io","c":"ChannelReader","l":"position()"},{"p":"compiler.io","c":"Reader","l":"position()"},{"p":"lucis.compiler.syntax","c":"SyntaxTree","l":"position()"},{"p":"compiler.entity","c":"Position","l":"Position(long, long)","u":"%3Cinit%3E(long,long)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree","l":"position(Position)","u":"position(compiler.entity.Position)"},{"p":"lucis.compiler.syntax","c":"BranchStatement","l":"positive"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"POSITIVE"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"POSITIVE"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"positiveExpression(Expression)","u":"positiveExpression(lucis.compiler.syntax.Expression)"},{"p":"compiler.lexer","c":"LexicalRule","l":"priority()"},{"p":"compiler.parser","c":"GrammarPriority","l":"priority()"},{"p":"lucis.compiler.semantic.steps","c":"CollectModuleStep","l":"process(SyntaxTree, Environment)","u":"process(lucis.compiler.syntax.SyntaxTree,lucis.compiler.semantic.Environment)"},{"p":"lucis.compiler.semantic.steps","c":"CollectTypeStep","l":"process(SyntaxTree, Environment)","u":"process(lucis.compiler.syntax.SyntaxTree,lucis.compiler.semantic.Environment)"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"process(SyntaxTree, Environment)","u":"process(lucis.compiler.syntax.SyntaxTree,lucis.compiler.semantic.Environment)"},{"p":"lucis.compiler.semantic.steps","c":"ResolveFunctionStep","l":"process(SyntaxTree, Environment)","u":"process(lucis.compiler.syntax.SyntaxTree,lucis.compiler.semantic.Environment)"},{"p":"lucis.compiler.semantic.steps","c":"ResolveImportStep","l":"process(SyntaxTree, Environment)","u":"process(lucis.compiler.syntax.SyntaxTree,lucis.compiler.semantic.Environment)"},{"p":"compiler.semantic","c":"BFSPass","l":"process(T, Deque<T>, E)","u":"process(T,java.util.Deque,E)"},{"p":"compiler.semantic","c":"DFSPass","l":"process(T, Deque<T>, E)","u":"process(T,java.util.Deque,E)"},{"p":"compiler.semantic","c":"Pass","l":"process(T, Deque<T>, E)","u":"process(T,java.util.Deque,E)"},{"p":"compiler.semantic","c":"Step","l":"process(T, E)","u":"process(T,E)"},{"p":"compiler.lexer","c":"RegularExpression","l":"pure(String)","u":"pure(java.lang.String)"},{"p":"compiler.lexer","c":"RegularExpression.Pure","l":"Pure(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"QUESTION"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"R_ANGLE_BRACKET"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"R_CURLY_BRACKET"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"R_ROUND_BRACKET"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"R_SQUARE_BRACKET"},{"p":"compiler.lexer","c":"RegularExpression","l":"range(int, int)","u":"range(int,int)"},{"p":"compiler.lexer","c":"RegularExpression.Range","l":"Range(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"RAW_STRING_LITERAL"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"rawStringExpression(String)","u":"rawStringExpression(java.lang.String)"},{"p":"compiler.parser","c":"Grammar","l":"reduction()"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"REMAINDER"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"REMAINDER"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"remainderExpression(Expression, Expression)","u":"remainderExpression(lucis.compiler.syntax.Expression,lucis.compiler.syntax.Expression)"},{"p":"compiler.lexer","c":"RegularExpression","l":"repeat(int)"},{"p":"compiler.lexer","c":"RegularExpression","l":"repeat(RegularExpression, int)","u":"repeat(compiler.lexer.RegularExpression,int)"},{"p":"compiler.io","c":"ChannelReader","l":"reset()"},{"p":"compiler.io","c":"Reader","l":"reset()"},{"p":"compiler.lexer","c":"DFALexer","l":"resolve(Reader)","u":"resolve(compiler.io.Reader)"},{"p":"compiler.lexer","c":"Lexer","l":"resolve(Reader)","u":"resolve(compiler.io.Reader)"},{"p":"lucis.compiler.semantic.steps","c":"ResolveFunctionStep","l":"ResolveFunctionStep()","u":"%3Cinit%3E()"},{"p":"lucis.compiler.semantic.steps","c":"ResolveImportStep","l":"ResolveImportStep()","u":"%3Cinit%3E()"},{"p":"lucis.compiler.utility","c":"AnalyzePasses","l":"ResolvePass"},{"p":"lucis.compiler.semantic.steps","c":"ResolveVariableStep","l":"ResolveVariableStep()","u":"%3Cinit%3E()"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"RETURN"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"returnStatement(Expression)","u":"returnStatement(lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.syntax","c":"ReturnStatement","l":"ReturnStatement(Expression)","u":"%3Cinit%3E(lucis.compiler.syntax.Expression)"},{"p":"lucis.compiler.syntax","c":"AssignStatement","l":"right"},{"p":"compiler.parser","c":"Grammar","l":"right()"},{"p":"compiler.entity","c":"Position","l":"ROOT"},{"p":"lucis.compiler.semantic","c":"Context","l":"root()"},{"p":"compiler.semantic","c":"SemanticException","l":"SemanticException()","u":"%3Cinit%3E()"},{"p":"compiler.semantic","c":"SemanticException","l":"SemanticException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"compiler.semantic","c":"SemanticException","l":"SemanticException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"compiler.semantic","c":"SemanticException","l":"SemanticException(String, Throwable, boolean, boolean)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)"},{"p":"compiler.semantic","c":"SemanticException","l":"SemanticException(Throwable)","u":"%3Cinit%3E(java.lang.Throwable)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"SEMICOLON"},{"p":"lucis.compiler.semantic","c":"Context","l":"setCurrentModule(LucisModule)","u":"setCurrentModule(lucis.compiler.semantic.LucisModule)"},{"p":"compiler.semantic","c":"Pass","l":"setup()"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"SHARP"},{"p":"lucis.compiler.semantic","c":"LucisFunction","l":"signature"},{"p":"lucis.compiler.semantic","c":"LucisSymbol","l":"signature()"},{"p":"lucis.compiler.utility","c":"Utility","l":"signature(String, Iterable<String>)","u":"signature(java.lang.String,java.lang.Iterable)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"SINGLE_QUOTE"},{"p":"lucis.compiler.syntax","c":"SingleOperatorExpression","l":"SingleOperatorExpression(OperatorExpression.Operator, Expression)","u":"%3Cinit%3E(lucis.compiler.syntax.OperatorExpression.Operator,lucis.compiler.syntax.Expression)"},{"p":"compiler.io","c":"ChannelReader","l":"skip()"},{"p":"compiler.io","c":"Reader","l":"skip()"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"source(ModuleHeader, List<Statement>)","u":"source(lucis.compiler.syntax.ModuleHeader,java.util.List)"},{"p":"lucis.compiler.syntax","c":"Source","l":"Source(ModuleHeader, List<Statement>)","u":"%3Cinit%3E(lucis.compiler.syntax.ModuleHeader,java.util.List)"},{"p":"compiler.lexer","c":"RegularExpression.Range","l":"start()"},{"p":"lucis.compiler.syntax","c":"Statement","l":"Statement(List<SyntaxTree>)","u":"%3Cinit%3E(java.util.List)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"statement(Statement)","u":"statement(lucis.compiler.syntax.Statement)"},{"p":"lucis.compiler.syntax","c":"Statement","l":"Statement(SyntaxTree...)","u":"%3Cinit%3E(lucis.compiler.syntax.SyntaxTree...)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"statementList()"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"statementList(List<Statement>, Statement)","u":"statementList(java.util.List,lucis.compiler.syntax.Statement)"},{"p":"lucis.compiler.syntax","c":"BlockStatement","l":"statements"},{"p":"lucis.compiler.syntax","c":"Source","l":"statements"},{"p":"lucis.compiler.syntax","c":"TraitStatement","l":"statements"},{"p":"compiler.semantic","c":"BFSPass.Builder","l":"step(Step<T, E>)","u":"step(compiler.semantic.Step)"},{"p":"compiler.semantic","c":"DFSPass.Builder","l":"step(Step<T, E>)","u":"step(compiler.semantic.Step)"},{"p":"compiler.semantic","c":"Pass.Builder","l":"step(Step<T, E>)","u":"step(compiler.semantic.Step)"},{"p":"lucis.compiler.syntax","c":"LiteralExpression.Type","l":"STRING"},{"p":"lucis.compiler.utility","c":"Constants","l":"STRING_TYPE"},{"p":"lucis.compiler.semantic","c":"LucisModule","l":"symbols()"},{"p":"lucis.compiler.syntax","c":"SyntaxTree","l":"SyntaxTree(List<? extends SyntaxTree>)","u":"%3Cinit%3E(java.util.List)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree","l":"SyntaxTree(Stream<? extends SyntaxTree>)","u":"%3Cinit%3E(java.util.stream.Stream)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree","l":"SyntaxTree(SyntaxTree...)","u":"%3Cinit%3E(lucis.compiler.syntax.SyntaxTree...)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"TAB"},{"p":"com.lucis.compiler","c":"Test","l":"Test()","u":"%3Cinit%3E()"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"TILDE"},{"p":"compiler.entity","c":"Position","l":"toString()"},{"p":"compiler.entity","c":"Unit","l":"toString()"},{"p":"compiler.lexer","c":"RegularExpression.Alternation","l":"toString()"},{"p":"compiler.lexer","c":"RegularExpression.Any","l":"toString()"},{"p":"compiler.lexer","c":"RegularExpression.Closure","l":"toString()"},{"p":"compiler.lexer","c":"RegularExpression.Concatenation","l":"toString()"},{"p":"compiler.lexer","c":"RegularExpression.Empty","l":"toString()"},{"p":"compiler.lexer","c":"RegularExpression.Pure","l":"toString()"},{"p":"compiler.lexer","c":"RegularExpression.Range","l":"toString()"},{"p":"compiler.parser","c":"Grammar.Part","l":"toString()"},{"p":"compiler.parser","c":"Grammar","l":"toString()"},{"p":"lucis.compiler.semantic","c":"LucisSymbol","l":"toString()"},{"p":"lucis.compiler.semantic","c":"LucisType.Field","l":"toString()"},{"p":"lucis.compiler.semantic","c":"LucisType","l":"toString()"},{"p":"lucis.compiler.syntax","c":"FunctionStatement.Parameter","l":"toString()"},{"p":"lucis.compiler.syntax","c":"UniqueIdentifier","l":"toString()"},{"p":"lucis.compiler.semantic","c":"LucisType.Kind","l":"TRAIT"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"TRAIT"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"traitStatement(String)","u":"traitStatement(java.lang.String)"},{"p":"lucis.compiler.syntax","c":"TraitStatement","l":"TraitStatement(String, List<ElementExpression>, List<FunctionStatement>)","u":"%3Cinit%3E(java.lang.String,java.util.List,java.util.List)"},{"p":"lucis.compiler.semantic","c":"LucisObject","l":"type"},{"p":"lucis.compiler.semantic","c":"LucisVariable","l":"type"},{"p":"lucis.compiler.syntax","c":"ClassStatement.Field","l":"type"},{"p":"lucis.compiler.syntax","c":"DefineStatement","l":"type"},{"p":"lucis.compiler.syntax","c":"FunctionStatement","l":"type"},{"p":"lucis.compiler.syntax","c":"LiteralExpression","l":"type"},{"p":"lucis.compiler.semantic","c":"LucisSymbol.Kind","l":"TYPE"},{"p":"lucis.compiler.utility","c":"Constants","l":"TYPE_TYPE"},{"p":"compiler.semantic","c":"DefinePass","l":"type()"},{"p":"lucis.compiler.syntax","c":"FunctionStatement.Parameter","l":"type()"},{"p":"lucis.compiler.semantic","c":"LucisVariable","l":"typename"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"uniqueIdentifier(String)","u":"uniqueIdentifier(java.lang.String)"},{"p":"lucis.compiler.syntax","c":"UniqueIdentifier","l":"UniqueIdentifier(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"lucis.compiler.utility","c":"GrammarRules","l":"uniqueIdentifier(String, String)","u":"uniqueIdentifier(java.lang.String,java.lang.String)"},{"p":"lucis.compiler.syntax","c":"UniqueIdentifier","l":"UniqueIdentifier(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"lucis.compiler.semantic","c":"Utility","l":"uniqueType(UniqueIdentifier, Context, Environment)","u":"uniqueType(lucis.compiler.syntax.UniqueIdentifier,lucis.compiler.semantic.Context,lucis.compiler.semantic.Environment)"},{"p":"compiler.entity","c":"Unit","l":"Unit(String, Object, Position)","u":"%3Cinit%3E(java.lang.String,java.lang.Object,compiler.entity.Position)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"UPPER_LETTERS"},{"p":"lucis.compiler.syntax","c":"DefineStatement","l":"value"},{"p":"lucis.compiler.syntax","c":"LiteralExpression","l":"value"},{"p":"lucis.compiler.syntax","c":"ReturnStatement","l":"value"},{"p":"compiler.entity","c":"Unit","l":"value()"},{"p":"compiler.lexer","c":"LexicalRule","l":"value()"},{"p":"compiler.lexer","c":"LexicalRules","l":"value()"},{"p":"compiler.parser","c":"GrammarPriorities","l":"value()"},{"p":"compiler.parser","c":"GrammarRule","l":"value()"},{"p":"compiler.parser","c":"GrammarRules","l":"value()"},{"p":"compiler.semantic","c":"DefinePass","l":"value()"},{"p":"compiler.parser","c":"Grammar.Capture","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"compiler.semantic","c":"DefinePass.Type","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"lucis.compiler.semantic","c":"LucisSymbol.Kind","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"lucis.compiler.semantic","c":"LucisType.Kind","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"lucis.compiler.syntax","c":"LiteralExpression.Type","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"compiler.parser","c":"Grammar.Capture","l":"values()"},{"p":"compiler.semantic","c":"DefinePass.Type","l":"values()"},{"p":"lucis.compiler.semantic","c":"LucisSymbol.Kind","l":"values()"},{"p":"lucis.compiler.semantic","c":"LucisType.Kind","l":"values()"},{"p":"lucis.compiler.syntax","c":"LiteralExpression.Type","l":"values()"},{"p":"lucis.compiler.syntax","c":"OperatorExpression.Operator","l":"values()"},{"p":"lucis.compiler.semantic","c":"LucisSymbol.Kind","l":"VARIABLE"},{"p":"compiler.lexer","c":"RegularExpression.Alternation","l":"visit(RegularExpression.Visitor<T>)","u":"visit(compiler.lexer.RegularExpression.Visitor)"},{"p":"compiler.lexer","c":"RegularExpression.Any","l":"visit(RegularExpression.Visitor<T>)","u":"visit(compiler.lexer.RegularExpression.Visitor)"},{"p":"compiler.lexer","c":"RegularExpression.Closure","l":"visit(RegularExpression.Visitor<T>)","u":"visit(compiler.lexer.RegularExpression.Visitor)"},{"p":"compiler.lexer","c":"RegularExpression.Concatenation","l":"visit(RegularExpression.Visitor<T>)","u":"visit(compiler.lexer.RegularExpression.Visitor)"},{"p":"compiler.lexer","c":"RegularExpression.Empty","l":"visit(RegularExpression.Visitor<T>)","u":"visit(compiler.lexer.RegularExpression.Visitor)"},{"p":"compiler.lexer","c":"RegularExpression.Pure","l":"visit(RegularExpression.Visitor<T>)","u":"visit(compiler.lexer.RegularExpression.Visitor)"},{"p":"compiler.lexer","c":"RegularExpression.Range","l":"visit(RegularExpression.Visitor<T>)","u":"visit(compiler.lexer.RegularExpression.Visitor)"},{"p":"compiler.lexer","c":"RegularExpression","l":"visit(RegularExpression.Visitor<T>)","u":"visit(compiler.lexer.RegularExpression.Visitor)"},{"p":"lucis.compiler.syntax","c":"AssignStatement","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"lucis.compiler.syntax","c":"BlockStatement","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"lucis.compiler.syntax","c":"BranchStatement","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"lucis.compiler.syntax","c":"ClassStatement","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"lucis.compiler.syntax","c":"DefineStatement","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"lucis.compiler.syntax","c":"DiscardStatement","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"lucis.compiler.syntax","c":"DoubleOperatorExpression","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"lucis.compiler.syntax","c":"ElementExpression","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"lucis.compiler.syntax","c":"FunctionExpression","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"lucis.compiler.syntax","c":"FunctionStatement","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"lucis.compiler.syntax","c":"IndexExpression","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"lucis.compiler.syntax","c":"LiteralExpression","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"lucis.compiler.syntax","c":"ReturnStatement","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"lucis.compiler.syntax","c":"SingleOperatorExpression","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"lucis.compiler.syntax","c":"Source","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"lucis.compiler.syntax","c":"TraitStatement","l":"visit(SyntaxTree.Visitor<T>)","u":"visit(lucis.compiler.syntax.SyntaxTree.Visitor)"},{"p":"compiler.lexer","c":"RegularExpression.Visitor","l":"visitAlternation(RegularExpression.Alternation)","u":"visitAlternation(compiler.lexer.RegularExpression.Alternation)"},{"p":"compiler.lexer","c":"RegularExpression.Visitor","l":"visitAny()"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"visitAssignStatement(AssignStatement)","u":"visitAssignStatement(lucis.compiler.syntax.AssignStatement)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree.Visitor","l":"visitAssignStatement(AssignStatement)","u":"visitAssignStatement(lucis.compiler.syntax.AssignStatement)"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"visitBlockStatement(BlockStatement)","u":"visitBlockStatement(lucis.compiler.syntax.BlockStatement)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree.Visitor","l":"visitBlockStatement(BlockStatement)","u":"visitBlockStatement(lucis.compiler.syntax.BlockStatement)"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"visitBranchStatement(BranchStatement)","u":"visitBranchStatement(lucis.compiler.syntax.BranchStatement)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree.Visitor","l":"visitBranchStatement(BranchStatement)","u":"visitBranchStatement(lucis.compiler.syntax.BranchStatement)"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"visitClassStatement(ClassStatement)","u":"visitClassStatement(lucis.compiler.syntax.ClassStatement)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree.Visitor","l":"visitClassStatement(ClassStatement)","u":"visitClassStatement(lucis.compiler.syntax.ClassStatement)"},{"p":"compiler.lexer","c":"RegularExpression.Visitor","l":"visitClosure(RegularExpression.Closure)","u":"visitClosure(compiler.lexer.RegularExpression.Closure)"},{"p":"compiler.lexer","c":"RegularExpression.Visitor","l":"visitConcatenation(RegularExpression.Concatenation)","u":"visitConcatenation(compiler.lexer.RegularExpression.Concatenation)"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"visitDefineStatement(DefineStatement)","u":"visitDefineStatement(lucis.compiler.syntax.DefineStatement)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree.Visitor","l":"visitDefineStatement(DefineStatement)","u":"visitDefineStatement(lucis.compiler.syntax.DefineStatement)"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"visitDiscardStatement(DiscardStatement)","u":"visitDiscardStatement(lucis.compiler.syntax.DiscardStatement)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree.Visitor","l":"visitDiscardStatement(DiscardStatement)","u":"visitDiscardStatement(lucis.compiler.syntax.DiscardStatement)"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"visitDoubleOperatorExpression(DoubleOperatorExpression)","u":"visitDoubleOperatorExpression(lucis.compiler.syntax.DoubleOperatorExpression)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree.Visitor","l":"visitDoubleOperatorExpression(DoubleOperatorExpression)","u":"visitDoubleOperatorExpression(lucis.compiler.syntax.DoubleOperatorExpression)"},{"p":"compiler.lexer","c":"RegularExpression.Visitor","l":"visitEmpty()"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"visitFunctionExpression(FunctionExpression)","u":"visitFunctionExpression(lucis.compiler.syntax.FunctionExpression)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree.Visitor","l":"visitFunctionExpression(FunctionExpression)","u":"visitFunctionExpression(lucis.compiler.syntax.FunctionExpression)"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"visitFunctionStatement(FunctionStatement)","u":"visitFunctionStatement(lucis.compiler.syntax.FunctionStatement)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree.Visitor","l":"visitFunctionStatement(FunctionStatement)","u":"visitFunctionStatement(lucis.compiler.syntax.FunctionStatement)"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"visitIdentifierExpression(ElementExpression)","u":"visitIdentifierExpression(lucis.compiler.syntax.ElementExpression)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree.Visitor","l":"visitIdentifierExpression(ElementExpression)","u":"visitIdentifierExpression(lucis.compiler.syntax.ElementExpression)"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"visitIndexExpression(IndexExpression)","u":"visitIndexExpression(lucis.compiler.syntax.IndexExpression)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree.Visitor","l":"visitIndexExpression(IndexExpression)","u":"visitIndexExpression(lucis.compiler.syntax.IndexExpression)"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"visitLiteralExpression(LiteralExpression)","u":"visitLiteralExpression(lucis.compiler.syntax.LiteralExpression)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree.Visitor","l":"visitLiteralExpression(LiteralExpression)","u":"visitLiteralExpression(lucis.compiler.syntax.LiteralExpression)"},{"p":"compiler.lexer","c":"RegularExpression.Visitor","l":"visitPure(RegularExpression.Pure)","u":"visitPure(compiler.lexer.RegularExpression.Pure)"},{"p":"compiler.lexer","c":"RegularExpression.Visitor","l":"visitRange(RegularExpression.Range)","u":"visitRange(compiler.lexer.RegularExpression.Range)"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"visitReturnStatement(ReturnStatement)","u":"visitReturnStatement(lucis.compiler.syntax.ReturnStatement)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree.Visitor","l":"visitReturnStatement(ReturnStatement)","u":"visitReturnStatement(lucis.compiler.syntax.ReturnStatement)"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"visitSingleOperatorExpression(SingleOperatorExpression)","u":"visitSingleOperatorExpression(lucis.compiler.syntax.SingleOperatorExpression)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree.Visitor","l":"visitSingleOperatorExpression(SingleOperatorExpression)","u":"visitSingleOperatorExpression(lucis.compiler.syntax.SingleOperatorExpression)"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"visitSource(Source)","u":"visitSource(lucis.compiler.syntax.Source)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree.Visitor","l":"visitSource(Source)","u":"visitSource(lucis.compiler.syntax.Source)"},{"p":"lucis.compiler.semantic.steps","c":"InitializeContextStep","l":"visitTraitStatement(TraitStatement)","u":"visitTraitStatement(lucis.compiler.syntax.TraitStatement)"},{"p":"lucis.compiler.syntax","c":"SyntaxTree.Visitor","l":"visitTraitStatement(TraitStatement)","u":"visitTraitStatement(lucis.compiler.syntax.TraitStatement)"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"WHEN"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"WHILE"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"WHITESPACE"},{"p":"lucis.compiler.utility","c":"LexicalRules","l":"ZERO"}];updateSearchResults();